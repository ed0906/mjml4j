apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

def VERSION = '1.0.0'

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    testCompile 'junit:junit:4.11'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.6.0'

    integrationTestCompile group: 'commons-cli', name: 'commons-cli', version: '1.4'

}

// Signing
signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign configurations.archives
}

// Add Javadoc JAR and sources JAR to artifact
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: maven2_url) {
                authentication(userName: System.getenv('SONATYPE_USERNAME'), password: System.getenv('SONATYPE_PASSWORD'))
            }
            snapshotRepository(url: snapshot_url) {
                authentication(userName: System.getenv('SONATYPE_USERNAME'), password: System.getenv('SONATYPE_PASSWORD'))
            }
            pom.project {
                name project_name
                packaging 'jar'
                description project_description
                url project_url
                scm {
                    connection project_scm
                    developerConnection project_scm
                    url project_url
                }
                licenses {
                    license {
                        name project_license_slug
                        url project_license_url
                    }
                }
                developers {
                    developer {
                        id project_developer
                        name project_developer
                    }
                }
            }
        }
    }
}


//buildDir = './clientBuild'
//
//task clientJar(type: Jar) {
//    baseName = NAME
//    dependsOn classes
//    from sourceSets.main.output
//    include('com.ifusion/mjml/**/*')
//}


//artifacts {
//    archives clientJar
//}
//
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: "http://nexus.fusing-ideas.com/content/repositories/releases/") {
//                authentication(userName: REPOSITORY_USER, password: REPOSITORY_PWD)
//            }
//            addFilter('clientJar') {artifact, file -> artifact.name == NAME}
//            pom('clientJar') {
//                version = VERSION
//                artifactId = NAME
//                groupId = GROUP
//            }
//        }
//    }
//}
//
//uploadArchives.dependsOn clientJar